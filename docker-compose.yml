services:
  postgres-catalog:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_CATALOG_DB}
      POSTGRES_USER: ${POSTGRES_CATALOG_USER}
      POSTGRES_PASSWORD: ${POSTGRES_CATALOG_PASSWORD}
    ports:
      - "${POSTGRES_CATALOG_HOST_PORT}:5432"
    volumes:
      - catalog_data:/var/lib/postgresql/data
    networks:
      - app-network

  postgres-auth:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_AUTH_DB}
      POSTGRES_USER: ${POSTGRES_AUTH_USER}
      POSTGRES_PASSWORD: ${POSTGRES_AUTH_PASSWORD}
    ports:
      - "${POSTGRES_AUTH_HOST_PORT}:5432"
    volumes:
      - auth_data:/var/lib/postgresql/data
    networks:
      - app-network

  postgres-cart:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_CART_DB}
      POSTGRES_USER: ${POSTGRES_CART_USER}
      POSTGRES_PASSWORD: ${POSTGRES_CART_PASSWORD}
    ports:
      - "${POSTGRES_CART_HOST_PORT}:5432"
    volumes:
      - cart_data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - postgres-catalog
      - postgres-auth
      - postgres-cart
    networks:
      - app-network

  catalog:
    build:
      context: ./services/catalog-service
      dockerfile: Dockerfile
    container_name: catalog_service
    environment:
      DATABASE_URL: ${CATALOG_DATABASE_URL}
      NODE_ENV: production
      PORT: ${CATALOG_PORT}
    ports:
      - "${CATALOG_PORT}:${CATALOG_PORT}"
    depends_on:
      - postgres-catalog
    networks:
      - app-network

  auth:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: auth_service
    environment:
      DATABASE_URL: ${AUTH_DATABASE_URL}
      NODE_ENV: production
      PORT: ${AUTH_PORT}
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}"
    depends_on:
      - postgres-auth
    networks:
      - app-network

  cart:
    build:
      context: ./services/cart-service
      dockerfile: Dockerfile
    container_name: cart_service
    environment:
      DATABASE_URL: ${CART_DATABASE_URL}
      NODE_ENV: production
      PORT: ${CART_PORT}
    ports:
      - "${CART_PORT}:${CART_PORT}"
    depends_on:
      - postgres-cart
    networks:
      - app-network


volumes:
  catalog_data:
  auth_data:
  cart_data:

networks:
  app-network:
    driver: bridge
